# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI - Main

on:
  push:
    branches: [main]
    paths:
      - 'icloudpy/**'
      - 'tests/**'
      - 'pytest.ini'
      - 'requirements*.txt'
      - '.github/workflows/ci-main-test-coverage.yml'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
    
    - name: Run linter
      run: |
        ruff check
    
    - name: Run tests with coverage
      run: |
        pytest
    
    - name: Generate coverage XML
      if: matrix.python-version == '3.10'
      run: |
        coverage xml
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.10'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
    
    - name: Upload coverage reports as artifact
      if: matrix.python-version == '3.10'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          htmlcov/
          coverage.xml
        retention-days: 1
    
    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@master
      if: always() && matrix.python-version == '3.10'
      with:
        allure_results: allure-results
        subfolder: test-results
        allure_report: allure-report
        allure_history: allure-history
        keep_reports: 100
    
    - name: Generate badges (legacy)
      if: matrix.python-version == '3.10'
      continue-on-error: true
      run: |
        # Legacy badge generation for gh-pages
        mkdir -p badges
        python3 << 'PYTHON_SCRIPT'
        import xml.etree.ElementTree as ET
        import requests
        
        # Get coverage
        coverage_pct = float(ET.parse('./coverage.xml').getroot().attrib['line-rate']) * 100.0
        
        # Generate SVG badges
        color = 'brightgreen' if coverage_pct == 100.0 else 'critical'
        response = requests.get(f'https://img.shields.io/static/v1?label=Coverage&message={coverage_pct:.2f}%&color={color}')
        with open('badges/coverage.svg', 'w') as f:
            f.write(response.text)
        
        # Generate test badge - assume passing if we get here
        response = requests.get('https://img.shields.io/static/v1?label=Tests&message=passing&color=brightgreen')
        with open('badges/tests.svg', 'w') as f:
            f.write(response.text)
        PYTHON_SCRIPT
    
    - name: Upload tests artifacts
      if: matrix.python-version == '3.10'
      uses: actions/upload-artifact@v4
      with:
        name: test-output
        path: allure-history/test-results/
        retention-days: 1
    
    - name: Upload badges artifacts
      if: matrix.python-version == '3.10'
      uses: actions/upload-artifact@v4
      with:
        name: badges-output
        path: badges
        retention-days: 1

  publish-test-report:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-output
          path: allure-history
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages
      - name: Publish test report to gh-pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          deploy_key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          publish_branch: gh-pages
          publish_dir: allure-history
          destination_dir: test-results

  publish-coverage-report:
    needs: publish-test-report
    runs-on: ubuntu-latest
    steps:
      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: coverage
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages
      - name: Publish test coverage to gh-pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          deploy_key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          publish_branch: gh-pages
          publish_dir: coverage
          destination_dir: test-coverage

  publish-badges:
    needs: publish-coverage-report
    runs-on: ubuntu-latest
    steps:
      - name: Download badges artifacts
        uses: actions/download-artifact@v4
        with:
          name: badges-output
          path: badges
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages
      - name: Publish badges to gh-pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          deploy_key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          publish_branch: gh-pages
          publish_dir: badges
          destination_dir: badges
